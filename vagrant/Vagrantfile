# -*- mode: ruby -*-
# # vi: set ft=ruby :

Vagrant.require_version ">= 1.6.0"

# Defaults for config options defined in CONFIG
$num_instances = 3
$instance_name_prefix = "devopsbox"
$enable_serial_logging = false
$share_home = false
$vm_gui = false
$vm_memory = 1024
$vm_cpus = 1
$forwarded_ports = {}

# Attempt to apply the deprecated environment variable NUM_INSTANCES to
# $num_instances while allowing config.rb to override it
if ENV["NUM_INSTANCES"].to_i > 0 && ENV["NUM_INSTANCES"]
  $num_instances = ENV["NUM_INSTANCES"].to_i
end

# Use old vb_xxx config variables when set
def vm_gui
  $vb_gui.nil? ? $vm_gui : $vb_gui
end

def vm_memory
  $vb_memory.nil? ? $vm_memory : $vb_memory
end

def vm_cpus
  $vb_cpus.nil? ? $vm_cpus : $vb_cpus
end

Vagrant.configure("2") do |config|
  
  # set machine's timezone
  if Vagrant.has_plugin?("vagrant-timezone")
		config.timezone.value = "Europe/London"
  end

  # always use Vagrants insecure key
  #config.ssh.insert_key = false

  config.vm.box = "centos/7"

  # enable hostmanager
  config.hostmanager.enabled = true

  # configure the host's /etc/hosts
  config.hostmanager.manage_host = true

  (1..$num_instances).each do |i|
    config.vm.define vm_name = "%s-%02d" % [$instance_name_prefix, i] do |config|
      config.vm.hostname = vm_name
      config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
      config.vm.synced_folder "#{Dir.home}", "/c", type: "virtualbox"
      config.vm.provider :virtualbox do |vb|
        vb.gui = vm_gui
        vb.memory = vm_memory
        vb.cpus = vm_cpus
      end
      ip = "192.168.88.#{i+100}"
      config.vm.network :private_network, ip: ip
      # SSH settings
      config.ssh.insert_key = false
      config.ssh.forward_agent = true
      config.ssh.private_key_path =  ["~/.vagrant.d/insecure_private_key","keys/ansible-lab"]
      ssh_pub_key = File.readlines("keys/ansible-lab.pub").first.strip
      config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
      config.vm.provision 'shell', inline: "echo \"#{ssh_pub_key}\" >> /root/.ssh/authorized_keys"
      config.vm.provision 'shell', inline: "echo \"#{ssh_pub_key}\" >> /home/vagrant/.ssh/authorized_keys", privileged: false
      config.vm.provision "shell", inline: <<-EOC
        sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
        sudo systemctl restart sshd
      EOC
      config.vm.provision "ansible_local" do |ansible|
	      ansible.playbook = "ansible/playbook.yml"
	      ansible.sudo = true
       ansible.verbose = true
      end
    end
  end
end
